"0","### final.sample.interpolate"
"0","###"
"0","### @use"
"0","### Takes a baseline subtracted sampled and produces an interpolated result "
"0","### on a chosen temperature grid."
"0","###"
"0","### @requires"
"0","### dplyr"
"0","### cowplot"
"0","###"
"0","### @inputs"
"0","### x = baseline subtracted data.frame (use baseline function above!)"
"0","### grid.temp : grid of desired temperatures"
"0","### plot.on : outputs a graphic of interpolated sample?"
"0","###"
"0","### @function"
"0","final.sample.interpolate <- function(x, grid.temp, plot.on = TRUE)"
"0","{"
"0","  spline.fit <- smooth.spline(x$Temperature, x$dCp, cv = TRUE)"
"0","  interpolated.sample.pred <- predict(spline.fit, grid.temp)"
"0","  interpolated.sample <- data.frame(Temperature = grid.temp, "
"0","                                    dCp = interpolated.sample.pred$y)"
"0","  "
"0","  if(plot.on)"
"0","  {"
"0","    g.out <- ggplot(interpolated.sample, aes(x = Temperature, y = dCp)) + geom_point() +"
"0","      labs(title = 'Interpolated Result')"
"0","    print(g.out)"
"0","  }"
"0","  "
"0","  return(interpolated.sample)"
"0","}"
